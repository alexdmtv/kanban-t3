generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Board {
    id        Int      @id @default(autoincrement())
    ownerId   String   @map("owner_id") @db.VarChar
    name      String   @db.VarChar(256)
    createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
    updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
    lists     List[]

    @@map("boards")
}

model List {
    id            Int      @id @default(autoincrement())
    boardId       Int      @map("board_id")
    name          String   @db.VarChar(256)
    colorCode     String   @map("color_code") @db.VarChar(7)
    boardPosition Int      @map("board_position")
    createdAt     DateTime @default(now()) @map("created_at") @db.Timestamp(6)
    updatedAt     DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
    board         Board    @relation(fields: [boardId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "lists_board_id_boards_id_fk")
    tasks         Task[]

    @@map("lists")
}

model Subtask {
    id           Int      @id @default(autoincrement())
    taskId       Int      @map("task_id")
    title        String   @map("name") @db.VarChar(256)
    taskPosition Int      @map("task_position")
    isCompleted  Boolean  @default(false) @map("is_completed")
    createdAt    DateTime @default(now()) @map("created_at") @db.Timestamp(6)
    updatedAt    DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
    task         Task     @relation(fields: [taskId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "subtasks_task_id_tasks_id_fk")

    @@map("subtasks")
}

model Task {
    id           Int       @id @default(autoincrement())
    listId       Int       @map("list_id")
    title        String    @map("name") @db.VarChar(256)
    listPosition Int       @map("list_position")
    description  String?
    createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
    updatedAt    DateTime  @updatedAt @map("updated_at") @db.Timestamp(6)
    subtasks     Subtask[]
    list         List      @relation(fields: [listId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "tasks_list_id_lists_id_fk")

    @@map("tasks")
}
